{
  "version": 3,
  "sources": ["../../node_modules/react-auth-kit/src/AuthContext.ts", "../../node_modules/react-auth-kit/dist/_virtual/_tslib.js", "../../node_modules/js-cookie/dist/js.cookie.mjs", "../../node_modules/react-auth-kit/src/TokenObject.ts", "../../node_modules/react-auth-kit/src/utils/actions.ts", "../../node_modules/react-auth-kit/src/utils/reducers.ts", "../../node_modules/react-auth-kit/src/utils/hooks.ts", "../../node_modules/react-auth-kit/src/errors.ts", "../../node_modules/react-auth-kit/src/AuthProvider.tsx", "../../node_modules/react-auth-kit/src/createRefresh.ts", "../../node_modules/react-auth-kit/src/utils/utils.ts", "../../node_modules/react-auth-kit/src/PrivateRoute.tsx", "../../node_modules/react-auth-kit/src/hooks/useSignIn.ts", "../../node_modules/react-auth-kit/src/hooks/useSignOut.ts", "../../node_modules/react-auth-kit/src/hooks/useAuthUser.ts", "../../node_modules/react-auth-kit/src/hooks/useAuthHeader.ts", "../../node_modules/react-auth-kit/src/hooks/useIsAuthenticated.ts", "../../node_modules/react-auth-kit/src/higherOrderComponents/withSignIn.tsx", "../../node_modules/react-auth-kit/src/higherOrderComponents/withSignOut.tsx", "../../node_modules/react-auth-kit/src/higherOrderComponents/withAuthUser.tsx", "../../node_modules/react-auth-kit/src/higherOrderComponents/withAuthHeader.tsx", "../../node_modules/react-auth-kit/src/higherOrderComponents/withIsAuthenticated.tsx", "../../node_modules/react-auth-kit/src/index.tsx"],
  "sourcesContent": ["/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Auth Context\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport {AuthContextInterface} from './types';\n\nconst AuthContext = React.createContext<AuthContextInterface | null>(null);\n\nconst AuthContextConsumer = AuthContext.Consumer;\nexport {AuthContextConsumer};\nexport default AuthContext;\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nexport { __assign, __extends };\n//# sourceMappingURL=_tslib.js.map\n", "/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n", "import Cookies from 'js-cookie';\nimport {AuthKitStateInterface, AuthStateUserObject} from './types';\n\n/**\n * @class TokenObject\n *\n * Stores and retrieve Token\n */\nclass TokenObject {\n  private readonly authStorageName: string;\n  private readonly stateStorageName: string;\n  private readonly authTimeStorageName: string;\n  private readonly cookieDomain?: string;\n  private readonly cookieSecure?: boolean;\n  private readonly authStorageTypeName: string;\n  private readonly authStorageType: 'cookie' | 'localstorage';\n  private readonly refreshTokenName: string | null;\n  private readonly refreshTokenTimeName: string | null;\n  private readonly isUsingRefreshToken: boolean;\n\n  /**\n   * TokenObject - Stores, retrieve and process tokens\n   *\n   * @param authStorageName - Name of the Token,\n   * which will store the Authorization Token\n   *\n   * @param authStorageType - Type of the auth Storage, `\n   * cookie` or `localstorage`\n   *\n   * @param refreshTokenName - Name of the refresh Token,\n   * if `undefined`, then no refreshToken feature is using\n   *\n   * @param cookieDomain - domain name for the Cookies,\n   * only applicable when `authStorageType` is `cookie`\n   *\n   * @param cookieSecure - cookies are secure or not,\n   * only applicable when `authStorageType` is `cookie`\n   *\n   * @constructor\n   */\n  constructor(\n      authStorageName:string,\n      authStorageType:'cookie' | 'localstorage',\n      refreshTokenName:string | null,\n      cookieDomain?:string,\n      cookieSecure?:boolean,\n  ) {\n    this.authStorageType = authStorageType;\n    this.authStorageName = authStorageName;\n    this.authTimeStorageName = `${authStorageName}_storage`;\n    this.stateStorageName = `${authStorageName}_state`;\n    this.refreshTokenName = refreshTokenName;\n    this.cookieDomain = cookieDomain;\n    this.cookieSecure = cookieSecure;\n    this.authStorageTypeName = `${this.authStorageName}_type`;\n    this.isUsingRefreshToken = !!this.refreshTokenName;\n    this.refreshTokenTimeName = this.refreshTokenName ?\n      `${this.refreshTokenName}_time` : null;\n  }\n\n  /**\n   * Get the Initial Tokens and states\n   * Called externally in `AuthProvider`\n   * when the Application is bootstrapping or refreshed\n   *\n   * If the `authStorageType` is `cookie`,\n   * get information from `initialCookieToken()` function\n   *\n   * If the `authTokenType` is `localStorage`\n   * get information from `initialLSToken()` function\n   *\n   * @returns AuthKitStateInterface\n   */\n  initialToken(): AuthKitStateInterface {\n    if (this.authStorageType === 'cookie') {\n      return this.initialCookieToken_();\n    } else {\n      return this.initialLSToken_();\n    }\n  }\n\n  /**\n   * Get the Initial Token from Cookies\n   * Called internally by `initialToken` method\n   *\n   * If the `authStorageType` is `cookie`\n   * then this function is called\n   * And returns the Tokens and states Stored in all 4 cookies\n   *\n   * @returns AuthKitStateInterface\n   */\n  initialCookieToken_(): AuthKitStateInterface {\n    const authToken = Cookies.get(this.authStorageName);\n    const authTokenType = Cookies.get(this.authStorageTypeName);\n    const authTokenTime = Cookies.get(this.authTimeStorageName);\n    const stateCookie = Cookies.get(this.stateStorageName);\n\n    const refreshToken = this.isUsingRefreshToken &&\n    this.refreshTokenName != null ? Cookies.get(this.refreshTokenName) : null;\n\n    const refreshTokenTime = this.isUsingRefreshToken &&\n    this.refreshTokenTimeName != null ?\n      Cookies.get(this.refreshTokenTimeName) : null;\n\n    return this.checkTokenExist(\n        authToken,\n        authTokenType,\n        authTokenTime,\n        stateCookie,\n        refreshToken,\n        refreshTokenTime);\n  }\n\n  /**\n   * Get the Initial Token from LocalStorage\n   * Called internally by `initialToken` method\n   *\n   * If the `authStorageType` is `localstorage`\n   * then this function is called\n   * And returns the Tokens and states Stored in all 4 cookies\n   *\n   * @returns AuthKitStateInterface\n   */\n  initialLSToken_(): AuthKitStateInterface {\n    const authToken = localStorage.getItem(this.authStorageName);\n    const authTokenType = localStorage.getItem(this.authStorageTypeName);\n    const authTokenTime = localStorage.getItem(this.authTimeStorageName);\n    const stateCookie = localStorage.getItem(this.stateStorageName);\n\n    const refreshToken = this.isUsingRefreshToken &&\n    this.refreshTokenName != null ?\n      localStorage.getItem(this.refreshTokenName) : null;\n\n    const refreshTokenTime = this.isUsingRefreshToken &&\n    this.refreshTokenTimeName != null ?\n      localStorage.getItem(this.refreshTokenTimeName) : null;\n\n    return this.checkTokenExist(\n        authToken,\n        authTokenType,\n        authTokenTime,\n        stateCookie,\n        refreshToken,\n        refreshTokenTime);\n  }\n\n  /**\n   * Check if the Initial token is valid or not,\n   * Called Internally by `initialCookieToken_()` and `initialLSToken_()`\n   *\n   * If the tokens are valid,\n   * then it response TokenObject with auth Information\n   * Else it response TokenObject with all null\n   *\n   * @param authToken\n   * @param authTokenType\n   * @param authTokenTime\n   * @param stateCookie\n   * @param refreshToken\n   * @param refreshTokenTime\n   *\n   * @returns AuthKitStateInterface\n   *\n   */\n  checkTokenExist(\n      authToken: string | null | undefined,\n      authTokenType: string | null | undefined,\n      authTokenTime: string | null | undefined,\n      stateCookie: string | null | undefined,\n      refreshToken: string | null | undefined,\n      refreshTokenTime: string | null | undefined):\n    AuthKitStateInterface {\n    if (!!authToken && !!authTokenType && !!authTokenTime && !!stateCookie) {\n      const expiresAt = new Date(authTokenTime);\n      try {\n        const authState = JSON.parse(stateCookie);\n        const obj = {\n          auth: {\n            token: authToken,\n            type: authTokenType,\n            expiresAt: expiresAt,\n          },\n          userState: authState,\n          isSignIn: true,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          refresh: undefined,\n        };\n        if (this.isUsingRefreshToken && !!refreshToken && !! refreshTokenTime) {\n          const refreshTokenExpiresAt = new Date(refreshTokenTime);\n          return {\n            ...obj,\n            refresh: {\n              token: refreshToken,\n              expiresAt: refreshTokenExpiresAt,\n            },\n          };\n        } else {\n          return {\n            ...obj,\n            refresh: null,\n          };\n        }\n      } catch (e) {\n        return {\n          auth: null,\n          refresh: null,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false,\n        };\n      }\n    } else {\n      return {\n        auth: null,\n        refresh: null,\n        userState: null,\n        isUsingRefreshToken: this.isUsingRefreshToken,\n        isSignIn: false,\n      };\n    }\n  }\n\n  /**\n   * Sync Auth Tokens on time of login and logout\n   *\n   * Set the New Cookies or new Localstorage on login\n   * Or Remove the old Cookies or old Localstorage on logout\n   *\n   * @param authState\n   */\n  syncTokens(authState: AuthKitStateInterface): void {\n    if (authState.auth) {\n      if (this.isUsingRefreshToken && authState.refresh) {\n        this.setToken(\n            authState.auth.token,\n            authState.auth.type,\n            authState.refresh.token,\n            authState.refresh.expiresAt,\n            authState.auth.expiresAt,\n            authState.userState,\n        );\n      } else {\n        this.setToken(\n            authState.auth.token,\n            authState.auth.type,\n            null,\n            null,\n            authState.auth.expiresAt,\n            authState.userState,\n        );\n      }\n    } else {\n      this.removeToken();\n    }\n  }\n\n  /**\n   * Set Cookies or localstorage on login\n   *\n   * @param authToken\n   * @param authTokenType\n   * @param refreshToken\n   * @param refreshTokenExpiresAt\n   * @param expiresAt\n   * @param authState\n   */\n  setToken(\n      authToken: string,\n      authTokenType: string,\n      refreshToken: string | null,\n      refreshTokenExpiresAt: Date | null,\n      expiresAt: Date,\n      authState: AuthStateUserObject|null): void {\n    if (this.authStorageType === 'cookie') {\n      this.setCookieToken_(\n          authToken,\n          authTokenType,\n          refreshToken,\n          expiresAt,\n          refreshTokenExpiresAt,\n          authState);\n    } else {\n      this.setLSToken_(\n          authToken,\n          authTokenType,\n          refreshToken,\n          expiresAt,\n          refreshTokenExpiresAt,\n          authState);\n    }\n  }\n\n  /**\n   *\n   * Set Cookie on time of Login\n   *\n   * @param authToken\n   * @param authTokenType\n   * @param refreshToken\n   * @param expiresAt\n   * @param refreshTokenExpiresAt\n   * @param authState\n   */\n  setCookieToken_(\n      authToken: string,\n      authTokenType: string,\n      refreshToken: string | null,\n      expiresAt: Date,\n      refreshTokenExpiresAt: Date | null,\n      authState: AuthStateUserObject|null): void {\n    Cookies.set(this.authStorageName, authToken, {\n      expires: expiresAt,\n      domain: this.cookieDomain,\n      secure: this.cookieSecure,\n    });\n    Cookies.set(this.authStorageTypeName, authTokenType, {\n      expires: expiresAt,\n      domain: this.cookieDomain,\n      secure: this.cookieSecure,\n    });\n    Cookies.set(this.authTimeStorageName, expiresAt.toISOString(), {\n      expires: expiresAt,\n      domain: this.cookieDomain,\n      secure: this.cookieSecure,\n    });\n    if (authState) {\n      Cookies.set(this.stateStorageName, JSON.stringify(authState), {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure,\n      });\n    }\n\n    if (this.isUsingRefreshToken && !!this.refreshTokenName &&\n      !!refreshToken) {\n      Cookies.set(this.refreshTokenName, refreshToken, {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure,\n      });\n    }\n\n    if (this.isUsingRefreshToken && !!this.refreshTokenTimeName &&\n      !!refreshTokenExpiresAt) {\n      Cookies.set(this.refreshTokenTimeName,\n          refreshTokenExpiresAt.toISOString(), {\n            expires: expiresAt,\n            domain: this.cookieDomain,\n            secure: this.cookieSecure,\n          });\n    }\n  }\n\n  /**\n   * Set LocalStorage at the time of Login\n   *\n   * @param authToken\n   * @param authTokenType\n   * @param refreshToken\n   * @param expiresAt\n   * @param refreshTokenExpiresAt\n   * @param authState\n   */\n  setLSToken_(\n      authToken: string,\n      authTokenType: string,\n      refreshToken: string | null,\n      expiresAt: Date,\n      refreshTokenExpiresAt: Date | null,\n      authState: AuthStateUserObject|null): void {\n    localStorage.setItem(this.authStorageName, authToken);\n    localStorage.setItem(this.authStorageTypeName, authTokenType);\n    localStorage.setItem(this.authTimeStorageName, expiresAt.toISOString());\n    if (authState) {\n      localStorage.setItem(this.stateStorageName, JSON.stringify(authState));\n    }\n    if (this.isUsingRefreshToken && !!this.refreshTokenName &&\n      !!refreshToken) {\n      localStorage.setItem(this.refreshTokenName, refreshToken);\n    }\n    if (this.isUsingRefreshToken && !!this.refreshTokenTimeName &&\n      !!refreshTokenExpiresAt) {\n      localStorage.setItem(this.refreshTokenTimeName,\n          refreshTokenExpiresAt.toISOString());\n    }\n  }\n\n  /**\n   * Remove Tokens on time of Logout\n   */\n  removeToken(): void {\n    if (this.authStorageType === 'cookie') {\n      this.removeCookieToken_();\n    } else {\n      this.removeLSToken_();\n    }\n  }\n\n  /**\n   * Remove Token from Cookies\n   */\n  removeCookieToken_(): void {\n    Cookies.remove(this.authStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure,\n    });\n    Cookies.remove(this.authTimeStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure,\n    });\n    Cookies.remove(this.authStorageTypeName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure,\n    });\n    Cookies.remove(this.stateStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure,\n    });\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      Cookies.remove(this.refreshTokenName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure,\n      });\n    }\n    if (this.isUsingRefreshToken && !!this.refreshTokenTimeName) {\n      Cookies.remove(this.refreshTokenTimeName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure,\n      });\n    }\n  }\n\n  /**\n   * Remove Token from LocalStorage\n   */\n  removeLSToken_(): void {\n    localStorage.removeItem(this.authStorageName);\n    localStorage.removeItem(this.authTimeStorageName);\n    localStorage.removeItem(this.authStorageTypeName);\n    localStorage.removeItem(this.stateStorageName);\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      localStorage.removeItem(this.refreshTokenName);\n    }\n    if (this.isUsingRefreshToken && !!this.refreshTokenTimeName) {\n      localStorage.removeItem(this.refreshTokenTimeName);\n    }\n  }\n}\n\nexport default TokenObject;\n", "/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Actions for useReducer\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AuthStateUserObject} from '../types';\n\nexport enum ActionType {\n  SignIn,\n  SignOut,\n  RefreshToken\n}\n\nexport interface SignInActionPayload {\n  auth: {\n    token: string,\n    type: string,\n    expiresAt: Date\n  },\n  refresh: {\n    token: string,\n    expiresAt: Date\n  } | null,\n  userState: AuthStateUserObject | null,\n}\n\nexport interface RefreshTokenActionPayload {\n  newAuthToken: string | null,\n  newAuthTokenExpireIn?: number | null,\n  newRefreshToken?: string | null,\n  newRefreshTokenExpiresIn?: number | null,\n  newAuthUserState?: AuthStateUserObject | null\n}\n\nexport interface SignInAction {\n  type: ActionType.SignIn,\n  payload: SignInActionPayload\n}\n\nexport interface RefreshTokenAction {\n  type: ActionType.RefreshToken,\n  payload: RefreshTokenActionPayload\n}\n\nexport interface SignOutAction {\n  type: ActionType.SignOut;\n}\n\nexport type AuthActions = SignInAction | SignOutAction | RefreshTokenAction\n", "/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Reducers for useReducer\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {AuthKitStateInterface} from '../types';\nimport {\n  ActionType,\n  AuthActions,\n  SignInAction,\n  SignInActionPayload,\n  SignOutAction,\n  RefreshTokenAction,\n  RefreshTokenActionPayload,\n} from './actions';\n\n/**\n * Auth Reducer\n * Used in auth state\n * @param state\n * @param action\n */\nexport function authReducer(state: AuthKitStateInterface,\n    action: AuthActions)\n  : AuthKitStateInterface {\n  switch (action.type) {\n    case ActionType.SignIn:\n      return {\n        ...state,\n        auth: action.payload.auth,\n        refresh: action.payload.refresh,\n        userState: action.payload.userState,\n        isSignIn: true,\n      };\n    case ActionType.SignOut:\n      return {\n        ...state,\n        auth: null,\n        refresh: null,\n        userState: null,\n        isSignIn: false,\n      };\n    case ActionType.RefreshToken:\n      if (state.isSignIn && state.auth && state.refresh) {\n        return {\n          ...state,\n          auth: {\n            token: action.payload.newAuthToken ?\n              action.payload.newAuthToken : state.auth.token,\n            type: state.auth.type,\n            expiresAt: action.payload.newAuthTokenExpireIn ?\n              new Date(new Date().getTime() +\n                action.payload.newAuthTokenExpireIn * 60 * 1000) :\n              state.auth.expiresAt,\n          },\n          refresh: {\n            token: action.payload.newRefreshToken ?\n              action.payload.newRefreshToken : state.refresh.token,\n            expiresAt: action.payload.newRefreshTokenExpiresIn ?\n              new Date(new Date().getTime() +\n                action.payload.newRefreshTokenExpiresIn * 60 * 1000) :\n              state.refresh.expiresAt,\n          },\n          userState: action.payload.newAuthUserState ?\n            action.payload.newAuthUserState : state.userState,\n        };\n      } else {\n        return state;\n      }\n  }\n}\n\n// Helper functions\n/**\n * used to make sign in\n * @param signInParams\n */\nexport function doSignIn(signInParams: SignInActionPayload): SignInAction {\n  return ({\n    type: ActionType.SignIn,\n    payload: signInParams,\n  });\n}\n\n/**\n * used to refresh the Token\n * @param refreshTokenParam\n */\nexport function doRefresh(refreshTokenParam: RefreshTokenActionPayload):\n  RefreshTokenAction {\n  return ({\n    type: ActionType.RefreshToken,\n    payload: refreshTokenParam,\n  });\n}\n\n/**\n * Used to make sign out\n */\nexport function doSignOut(): SignOutAction {\n  return ({\n    type: ActionType.SignOut,\n  });\n}\n", "/*\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\n\n/**\n * React useInterval Hook\n * Used to integrate the power of setInterval seamlessly\n *\n * @param callback - The callback function\n * @param delay - The amount of delay in minutes.\n *\n * @returns the ref of setInterval\n */\nfunction useInterval(callback: ()=>void, delay:number|null)\n  : React.MutableRefObject<number | null> {\n  const savedCallback = React.useRef(callback);\n  const intervalRef = React.useRef<number | null>(null);\n\n  // Remember the latest callback if it changes.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    const tick = () => savedCallback.current();\n\n    if (typeof delay === 'number') {\n      intervalRef.current = window.setInterval(tick, delay * 60 * 1000);\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        window.clearTimeout(intervalRef.current);\n      }\n    };\n  }, [delay]);\n\n  return intervalRef;\n}\n\nexport {useInterval};\n", "/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Error file\n * @copyright Arkadip Bhattacharya 2023\n */\n\n/**\n * @class\n * @name AuthKitError\n * @extends Error\n *\n * General Auth kit error class\n */\nexport class AuthKitError extends Error {\n  /**\n     * @constructor\n     * @param message - Error message\n     */\n  constructor(message: string) {\n    super(message);\n  }\n}\n", "import * as React from 'react';\nimport AuthContext from './AuthContext';\nimport TokenObject from './TokenObject';\nimport {AuthProviderProps} from './types';\nimport {authReducer, doRefresh} from './utils/reducers';\nimport {useInterval} from './utils/hooks';\nimport { AuthKitError } from './errors';\n\n\n/**\n * AuthProvider - The Authentication Context Provider\n *\n * @param children\n * @param authStorageName\n * @param cookieDomain\n * @param cookieSecure\n *\n * @return Functional Component\n */\nconst AuthProvider: React.FunctionComponent<AuthProviderProps> =\n  ({\n    children,\n    authType,\n    authName,\n    cookieDomain,\n    cookieSecure,\n    refresh,\n  }) => {\n    if (authType === 'cookie') {\n      if (!cookieDomain) {\n        throw new\n        AuthKitError('authType \\'cookie\\' ' +\n          'requires \\'cookieDomain\\' and \\'cookieSecure\\' ' +\n          'props in AuthProvider');\n      }\n    }\n\n    const refreshTokenName = refresh ? `${authName}_refresh` : null;\n\n    const tokenObject = new TokenObject(authName, authType,\n        refreshTokenName, cookieDomain, cookieSecure);\n\n    const [authState, dispatch] =\n      React.useReducer(authReducer, tokenObject.initialToken());\n\n    if (refresh) {\n      useInterval(\n          () => {\n            refresh\n              .refreshApiCallback({\n                authToken: authState.auth?.token,\n                authTokenExpireAt: authState.auth?.expiresAt,\n                authUserState: authState.userState,\n                refreshToken: authState.refresh?.token,\n                refreshTokenExpiresAt: authState.refresh?.expiresAt,\n              })\n              .then((result) => {\n                // IF the API call is successful then refresh the AUTH state\n                if (result.isSuccess) {\n                  // store the new value using the state update\n                  dispatch(doRefresh(result));\n                }\n                else {\n                  // do something in future\n                }\n              })\n              .catch(()=>{\n                // do something in future\n              });\n          },\n        authState.isSignIn ? refresh.interval : null,\n      );\n    }\n\n    React.useEffect(() => {\n      tokenObject.syncTokens(authState);\n    }, [authState]);\n\n    return (\n      <AuthContext.Provider value={{authState, dispatch}}>\n        {children}\n      </AuthContext.Provider>\n    );\n  };\n\nexport default AuthProvider;\n", "/*\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {createRefreshParamInterface} from './types';\n\n/**\n * This function doesn't really \"do anything\" at runtime,\n * it's just help to organize the code base\n * Use this function to create the refresh token system\n */\nfunction createRefresh(param: createRefreshParamInterface)\n  :createRefreshParamInterface {\n  return param;\n}\n\nexport default createRefresh;\n", "import {AuthKitStateInterface} from '../types';\n\n/**\n  *@function\n  *@name isAuthenticated\n  *@description A utility function to check\n  * weather the auth state is justified as athenticated\n  * or not\n  *\n  * It checks if the state in null or not,\n  * It the state is not NULL, it checks the expires time.\n  */\nfunction isAuthenticated(auth: AuthKitStateInterface) : boolean {\n  if (auth.auth) {\n    return new Date(auth.auth.expiresAt) > new Date();\n  }\n  return false;\n}\n\nexport {isAuthenticated};\n", "/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview PrivateRoute component\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from 'react';\nimport {useLocation, Navigate} from 'react-router-dom';\nimport AuthContext from './AuthContext';\nimport {doSignOut} from './utils/reducers';\nimport {AuthKitError} from './errors';\nimport {isAuthenticated} from './utils/utils';\n\ninterface RequireAuthProps {\n  children: JSX.Element,\n  loginPath: string\n}\n\n/**\n * Private Route for Components\n *\n * @remarks\n * This Component is based on {@link https://reactrouter.com/web/api/Route | reactrouter.Route}.\n * So you need to install react-route-dom before use it\n *\n * @param props\n */\n\nconst RequireAuth: React.FunctionComponent<RequireAuthProps> =\n  ({children, loginPath}) => {\n    const context = React.useContext(AuthContext);\n    if (context === null) {\n      throw new\n      AuthKitError('Auth Provider is missing. ' +\n      'Please add the AuthProvider before Router');\n    }\n\n    const location = useLocation();\n\n    if (!isAuthenticated(context.authState)) {\n      // Redirect them to the /login page, but save the current location they\n      // were trying to go to when they were redirected. This allows us to\n      // send them along to that page after they login, which is a nicer\n      // user experience than dropping them off on the home page.\n      context.dispatch(doSignOut());\n      return <Navigate to={loginPath} state={{from: location}} replace />;\n    }\n\n    return children;\n  };\n\n\nexport default RequireAuth;\n", "/**\n *@author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n *@fileoverview Sign In functionality <hook>\n *@copyright Arkadip Bhattacharya 2020\n *@license Apache-2.0\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport AuthContext from '../AuthContext';\nimport {signInFunctionParams} from '../types';\nimport {doSignIn} from '../utils/reducers';\nimport {AuthKitError} from '../errors';\n\n/**\n *@function\n *@name useSignIn\n *@description Authentication SignIn Hook\n *@returns - Sign In function\n */\nfunction useSignIn(): (signInConfig: signInFunctionParams) => boolean {\n  const context = React.useContext(AuthContext);\n  if (context === null) {\n    throw new\n    AuthKitError('Auth Provider is missing. ' +\n      'Please add the AuthProvider before Router');\n  }\n  return (signInConfig: signInFunctionParams): boolean => {\n    const {\n      token,\n      tokenType,\n      authState,\n      expiresIn,\n      refreshToken,\n      refreshTokenExpireIn,\n    } = signInConfig;\n    const expTime = new Date(new Date().getTime() + expiresIn * 60 * 1000);\n    if (context.authState.isUsingRefreshToken) {\n      // Using the power of refresh token\n      if (!!refreshToken && !!refreshTokenExpireIn) {\n        // refresh token params are provided\n        // sign in with refresh token\n        const refreshTokenExpireAt =\n          new Date(new Date().getTime() + refreshTokenExpireIn * 60 * 1000);\n        context.dispatch(doSignIn({\n          auth: {\n            token: token,\n            type: tokenType,\n            expiresAt: expTime,\n          },\n          userState: authState ? authState : null,\n          refresh: {\n            token: refreshToken,\n            expiresAt: refreshTokenExpireAt,\n          },\n        }));\n        return true;\n      } else {\n        // refresh token params are not provided\n        // throw an error\n        throw new AuthKitError('Make sure you given \"refreshToken\" and  ' +\n          '\"refreshTokenExpireIn\" parameter');\n      }\n    } else {\n      // Not using refresh token\n      if (!!refreshToken && !!refreshTokenExpireIn) {\n        // params are not expected but provided\n        // throw an error\n        throw new Error('The app doesn\\'t implement \\'refreshToken\\' ' +\n          'feature.\\nSo you have to implement refresh token feature ' +\n          'from \\'AuthProvider\\' before using it.');\n      } else {\n        // sign in without the refresh token\n        context.dispatch(doSignIn({\n          auth: {\n            token: token,\n            type: tokenType,\n            expiresAt: expTime,\n          },\n          userState: authState ? authState : null,\n          refresh: null,\n        }));\n        return true;\n      }\n    }\n  };\n}\n\n/**\n *@exports useSignIn\n */\nexport default useSignIn;\n", "/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Sign Out functionality <Hook>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport AuthContext from '../AuthContext';\nimport {doSignOut} from '../utils/reducers';\nimport {AuthKitError} from '../errors';\n\n/**\n  *@public\n  *@function\n  *@name useSignOut\n  *@description Sign out Hook\n  */\nfunction useSignOut(): () => (boolean) {\n  /**\n   *A constant c.\n   *@kind constant\n   */\n  const context = React.useContext(AuthContext);\n  if (context === null) {\n    throw new\n    AuthKitError('Auth Provider is missing. ' +\n      'Please add the AuthProvider before Router');\n  }\n\n  return () => {\n    try {\n      if (context) {\n        context.dispatch(doSignOut());\n        return true;\n      } else {\n        return false;\n      }\n    } catch (e) {\n      return false;\n    }\n  };\n}\n/**\n  *@exports useSignOut\n  */\nexport default useSignOut;\n", "/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication User <hook>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport AuthContext from '../AuthContext';\nimport {AuthStateUserObject} from '../types';\nimport {AuthKitError} from '../errors';\nimport {isAuthenticated} from '../utils/utils';\n\n/**\n * Auth State Hook\n *\n * @returns - Auth State Function\n */\nfunction useAuthUser(): () => AuthStateUserObject | null {\n  const context = React.useContext(AuthContext);\n  if (context === null) {\n    throw new\n    AuthKitError('Auth Provider is missing. ' +\n      'Please add the AuthProvider before Router');\n  }\n  return () => {\n    if (isAuthenticated(context.authState)) {\n      return context.authState.userState;\n    } else {\n      // TODO: Need to signout and redirect to login\n      return null;\n    }\n  };\n}\n\nexport default useAuthUser;\n", "/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication header <hook>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport AuthContext from '../AuthContext';\nimport {AuthKitError} from '../errors';\nimport {isAuthenticated} from '../utils/utils';\n\n/**\n *\n */\nfunction useAuthHeader(): () => (string) {\n  const c = React.useContext(AuthContext);\n  if (c === null) {\n    throw new\n    AuthKitError('Auth Provider is missing. ' +\n      'Please add the AuthProvider before Router');\n  }\n\n\n  return () => {\n    if (c.authState.auth && isAuthenticated(c.authState)) {\n      return `${c.authState.auth.type} ${c.authState.auth.token}`;\n    } else {\n      return ``;\n    }\n  };\n}\n\nexport default useAuthHeader;\n", "/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication status <hook>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport AuthContext from '../AuthContext';\nimport {AuthKitError} from '../errors';\nimport {isAuthenticated} from '../utils/utils';\n\n/**\n  *@function\n  *@name useIsAuthenticated\n  *@description check weather user is authenticated or not\n  */\nfunction useIsAuthenticated(): ()=>boolean {\n  const context = React.useContext(AuthContext);\n  if (context === null) {\n    throw new\n    AuthKitError('Auth Provider is missing. ' +\n      'Please add the AuthProvider before Router');\n  }\n  return () => {\n    if (!isAuthenticated(context.authState)) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n}\n/**\n  *@exports useIsAuthenticated\n  */\nexport default useIsAuthenticated;\n", "/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Sign In functionality <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from 'react';\nimport {AuthContextConsumer} from '../AuthContext';\nimport {signInFunctionParams} from '../types';\nimport {doSignIn} from '../utils/reducers';\nimport {AuthKitError} from '../errors';\n\n/**\n * @interface withSignInProps\n */\ninterface withSignInProps {\n    signIn(params: signInFunctionParams): boolean\n}\n\n/**\n * @public\n * @function\n * @name withSignIn\n * @description Inject sign in functionality inside the Component's Prop\n * @param Component\n */\nfunction withSignIn<P extends withSignInProps>(\n    Component: React.ComponentType<P>,\n):React.FunctionComponent<P> {\n  return (props) => {\n    return (\n      <AuthContextConsumer>\n        {(c) => {\n          if (c === null) {\n            throw new\n            AuthKitError('Auth Provider is missing. ' +\n              'Please add the AuthProvider before Router');\n          }\n          const signIn = (signInConfig: signInFunctionParams)\n            : boolean => {\n            const {\n              token,\n              tokenType,\n              authState,\n              expiresIn,\n              refreshToken,\n              refreshTokenExpireIn,\n            } = signInConfig;\n            const expTime =\n              new Date(new Date().getTime() + expiresIn * 60 * 1000);\n            if (c.authState.isUsingRefreshToken) {\n              // Using the power of refresh token\n              if (!!refreshToken && !!refreshTokenExpireIn) {\n                // refresh token params are provided\n                // sign in with refresh token\n                const refreshTokenExpireAt = new Date(new Date().getTime() +\n                  refreshTokenExpireIn * 60 * 1000);\n                c.dispatch(doSignIn({\n                  auth: {\n                    token: token,\n                    type: tokenType,\n                    expiresAt: expTime,\n                  },\n                  userState: authState ? authState : null,\n                  refresh: {\n                    token: refreshToken,\n                    expiresAt: refreshTokenExpireAt,\n                  },\n                }));\n                return true;\n              } else {\n                // refresh token params are not provided\n                // throw an error\n                throw new AuthKitError('Make sure you given \"refreshToken\"'+\n                ' and \"refreshTokenExpireIn\" parameter');\n              }\n            } else {\n              // Not using refresh token\n              if (!!refreshToken && !!refreshTokenExpireIn) {\n                // params are not expected but provided\n                // throw an error\n                throw new AuthKitError('The app doesn\\'t implement ' +\n                  '\\'refreshToken\\' feature.\\n So you have to'+\n                  ' implement refresh token feature' +\n                  ' from \\'AuthProvider\\' before using it.');\n              } else {\n                // sign in without the refresh token\n                c.dispatch(doSignIn({\n                  auth: {\n                    token: token,\n                    type: tokenType,\n                    expiresAt: expTime,\n                  },\n                  userState: authState ? authState : null,\n                  refresh: null,\n                }));\n                return true;\n              }\n            }\n          };\n          return <Component {...props} signIn={signIn}/>;\n        }}\n      </AuthContextConsumer>\n    );\n  };\n}\n\nexport default withSignIn;\n", "/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Sign Out functionality <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from 'react';\nimport {AuthContextConsumer} from '../AuthContext';\nimport {doSignOut} from '../utils/reducers';\nimport {AuthKitError} from '../errors';\n\n/**\n * @interface withSignOutProps\n */\ninterface withSignOutProps {\n    signOut(): boolean\n}\n\n/**\n * @public\n * @function\n * @name withSignOut\n * @description Inject sign Out functionality inside the Component's Prop\n * @param Component\n */\nfunction withSignOut<P extends withSignOutProps>(\n    Component: React.ComponentType<P>,\n): React.FunctionComponent<P> {\n  return (props) => {\n    return (\n      <AuthContextConsumer>\n        {(c) => {\n          if (c === null) {\n            throw new\n            AuthKitError('Auth Provider is missing. ' +\n              'Please add the AuthProvider before Router');\n          }\n          const signOut = () => {\n            try {\n              if (c) {\n                c.dispatch(doSignOut());\n                return true;\n              } else {\n                return false;\n              }\n            } catch (e) {\n              return false;\n            }\n          };\n          return <Component {...props} signOut={signOut}/>;\n        }}\n      </AuthContextConsumer>\n    );\n  };\n}\n\nexport default withSignOut;\n", "/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication User <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from 'react';\nimport {AuthContextConsumer} from '../AuthContext';\nimport {AuthStateUserObject} from '../types';\nimport {AuthKitError} from '../errors';\nimport {isAuthenticated} from '../utils/utils';\n\n/**\n * @interface withAuthProps\n */\ninterface withAuthProps {\n    authState: AuthStateUserObject| null\n}\n\n/**\n * @function\n * @name withAuthUser\n * @description Inject Authenticated User's state inside the Component's Prop\n * @param Component\n */\nfunction withAuthUser<P extends withAuthProps>(\n    Component: React.ComponentType<P>,\n): React.FunctionComponent<P> {\n  return (props: P)=>{\n    return (\n      <AuthContextConsumer>\n        {(context) => {\n          if (context === null) {\n            throw new\n            AuthKitError('Auth Provider is missing. ' +\n              'Please add the AuthProvider before Router');\n          }\n          if (context.authState.auth && isAuthenticated(context.authState)) {\n            return (\n              <Component {...props} authState={context.authState.userState}/>\n            );\n          } else {\n            return (\n              <Component {...props} authState={null}/>\n            );\n          }\n        }}\n      </AuthContextConsumer>\n    );\n  };\n}\n/**\n * @exports withAuthUser\n */\nexport default withAuthUser;\n", "/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication header <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport {AuthContextConsumer} from '../AuthContext';\nimport {AuthKitError} from '../errors';\nimport {isAuthenticated} from '../utils/utils';\n\n/**\n * @interface withAuthHeaderProps\n */\ninterface withAuthHeaderProps {\n    authHeader: string\n}\n\n/**\n * @public\n * @function\n * @name withAuthHeader\n * @description Inject Authentication Header inside the Component's Prop\n * @param Component - React Component\n */\nfunction withAuthHeader<P extends withAuthHeaderProps>(\n    Component: React.ComponentType<P>,\n):React.FunctionComponent<P> {\n  return (props) => {\n    return (\n      <AuthContextConsumer>\n        {(c) => {\n          if (c === null) {\n            throw new\n            AuthKitError('Auth Provider is missing. ' +\n              'Please add the AuthProvider before Router');\n          }\n          if (c.authState.auth && isAuthenticated(c.authState)) {\n            return (\n              <Component\n                {...props}\n                authHeader={\n                  `${c.authState.auth.type} ${c.authState.auth.token}`\n                }\n              />\n            );\n          } else {\n            return <Component {...props} authHeader={``}/>;\n          }\n        }}\n      </AuthContextConsumer>\n    );\n  };\n}\n/**\n  *@exports withAuthHeader\n  */\nexport default withAuthHeader;\n", "/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication status <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport {AuthContextConsumer} from '../AuthContext';\nimport {AuthKitError} from '../errors';\nimport {isAuthenticated} from '../utils/utils';\n\n/**\n * @interface withAuthHeaderProps\n */\ninterface withAuthHeaderProps {\n    isAuth: string\n}\n\n/**\n * @public\n * @function\n * @name withIsAuthenticated\n * @description Inject Authentication status inside the Component's Prop\n * @param Component\n */\nfunction withIsAuthenticated<P extends withAuthHeaderProps>(\n    Component: React.ComponentType<P>,\n): React.FunctionComponent<P> {\n  return (props) => {\n    return (\n      <AuthContextConsumer>\n        {(c) => {\n          if (c === null) {\n            throw new\n            AuthKitError('Auth Provider is missing. ' +\n              'Please add the AuthProvider before Router');\n          }\n          if (c.authState.auth && isAuthenticated(c.authState)) {\n            return <Component {...props} isAuth={true}/>;\n          } else {\n            return <Component {...props} isAuth={false}/>;\n          }\n        }}\n      </AuthContextConsumer>\n    );\n  };\n}\n\nexport default withIsAuthenticated;\n", "/*\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * last updated 25th August 2021\n */\n\nimport AuthProvider from './AuthProvider';\nimport createRefresh from './createRefresh';\nimport RequireAuth from './PrivateRoute';\nimport useSignIn from './hooks/useSignIn';\nimport useSignOut from './hooks/useSignOut';\nimport useAuthUser from './hooks/useAuthUser';\nimport useAuthHeader from './hooks/useAuthHeader';\nimport useIsAuthenticated from './hooks/useIsAuthenticated';\nimport withSignIn from './higherOrderComponents/withSignIn';\nimport withSignOut from './higherOrderComponents/withSignOut';\nimport withAuthUser from './higherOrderComponents/withAuthUser';\nimport withAuthHeader from './higherOrderComponents/withAuthHeader';\nimport withIsAuthenticated from './higherOrderComponents/withIsAuthenticated';\n\n// Default prop for AuthProvider\nAuthProvider.defaultProps = {\n  cookieDomain: window.location.hostname,\n  cookieSecure: window.location.protocol === 'https:',\n};\n\nexport {\n  AuthProvider,\n  RequireAuth,\n  createRefresh,\n  useSignIn,\n  useSignOut,\n  useAuthUser,\n  useAuthHeader,\n  useIsAuthenticated,\n  withSignIn,\n  withSignOut,\n  withAuthUser,\n  withAuthHeader,\n  withIsAuthenticated,\n};\n"],
  "mappings": "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",
  "names": ["d", "b", "__assign", "converter", "TokenObject", "ActionType", "AuthKitError", "_a", "_b"]
}
